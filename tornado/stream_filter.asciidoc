= Stream Filtering Tutorial for Python V4

[source,python]
.Publish with meta
----
meta = {
    'my': 'meta',
    'name': 'PubNub'
}

yield pubnub.publish().channel('ch1').meta(meta).message('hello').future()
----

[source,python]
.Subscribing with filtering
----
from pubnub.pnconfiguration import PNConfiguration
from pubnub.pubnub_tornado import PubNubTornado

pnconfig = PNConfiguration()
pnconfig.subscribe_key = 'my_key'
pnconfig.filter_expression = "filter == expression"
pubnub = PubNubTornado(pnconfig)
----

[source,python]
.Example #1-1
----
meta = {
    'language': 'english',
}

yield pubnub.publish().channel('ch1').meta(meta).message('Hi!').future()
----

[source,python]
.Example #1-2
----
from pubnub.pnconfiguration import PNConfiguration
from pubnub.pubnub_tornado import PubNubTornado

pnconfig = PNConfiguration()
pnconfig.subscribe_key = 'my_key'
pnconfig.filter_expression = "language == 'english'"
pubnub = PubNubTornado(pnconfig)
----

[source,python]
.Example #1-3
----
meta = {
    'language': 'french',
}

yield pubnub.publish().channel('ch1').meta(meta).message('Bonjour').future()
----

[source,python]
.Example #2-1
----
meta = {
    'language': 'english',
}

yield pubnub.publish().channel('ch1').meta(meta).message('Hi!').future()
----

[source,python]
.Example #2-2
----
meta = {
    'language': 'french',
}

yield pubnub.publish().channel('ch1').meta(meta).message('Bonjour').future()
----

[source,python]
.Example #2-3
----
meta = {
    'language': 'spanish',
}

yield pubnub.publish().channel('ch1').meta(meta).message('Hola').future()
----

[source,python]
.Example #2-4
----
from pubnub.pnconfiguration import PNConfiguration
from pubnub.pubnub_tornado import PubNubTornado

pnconfig = PNConfiguration()
pnconfig.subscribe_key = 'my_key'
pnconfig.filter_expression = "('french', 'english') contains language"
pubnub = PubNubTornado(pnconfig)
----


[source,python]
.Example #3-1
----
meta = {
    'language': 'english',
}

yield pubnub.publish().channel('ch1').meta(meta).message('Hi!').future()
----

[source,python]
.Example #3-2
----
meta = {
    'language': 'french',
}

yield pubnub.publish().channel('ch1').meta(meta).message('Bonjour').future()
----

[source,python]
.Example #3-3
----
meta = {
    'language': 'spanish',
}

yield pubnub.publish().channel('ch1').meta(meta).message('Hola').future()
----

[source,python]
.Example #3-4
----
from pubnub.pnconfiguration import PNConfiguration
from pubnub.pubnub_tornado import PubNubTornado

pnconfig = PNConfiguration()
pnconfig.subscribe_key = 'my_key'
pnconfig.filter_expression = "language != 'spanish'"
pubnub = PubNubTornado(pnconfig)
----

[source,python]
.Example #4-1
----
meta = {
    'price': '99.75',
    'channel': 'AAPL'
}

yield pubnub.publish().channel('AAPL').meta(meta).message('99.75').future()
----

[source,python]
.Example #4-2
----
meta = {
    'price': '100.00',
    'channel': 'AAPL'
}

yield pubnub.publish().channel('AAPL').meta(meta).message('100.00').future()
----

[source,python]
.Example #4-3
----
meta = {
    'price': '15.50',
    'channel': 'GOOG'
}

yield pubnub.publish().channel('AAPL').meta(meta).message('99.75').future()
----

[source,python]
.Example #4-4
----
meta = {
    'price': '14.95',
    'channel': 'GOOG'
}

yield pubnub.publish().channel('AAPL').meta(meta).message('100.00').sync()
----

[source,python]
.Example #4-5
----
from pubnub.pnconfiguration import PNConfiguration
from pubnub.pubnub_tornado import PubNubTornado

pnconfig = PNConfiguration()
pnconfig.subscribe_key = 'my_key'
pnconfig.filter_expression = "(price > 100.00 && channel == 'AAPL') || (price < 15.00 && channel == 'GOOG')"
pubnub = PubNubTornado(pnconfig)
----

[source,python]
.Example #5-1
----
meta = {
    'temperature': '60'
}

yield pubnub.publish().channel('ch1').meta(meta).message('Hi!').future()
----

[source,python]
.Example #5-2
----
from pubnub.pnconfiguration import PNConfiguration
from pubnub.pubnub_tornado import PubNubTornado

pnconfig = PNConfiguration()
pnconfig.subscribe_key = 'my_key'
pnconfig.filter_expression = "temperature > 50"
pubnub = PubNubTornado(pnconfig)
----
